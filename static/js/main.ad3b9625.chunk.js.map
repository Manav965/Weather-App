{"version":3,"sources":["reducers/index.js","reducers/weatherReducer.js","reducers/locationReducer.js","reducers/tempScaleReducer.js","actions/index.js","components/SearchLocation.js","components/Header.js","components/CurrentWeather.js","components/HourlyWeather.js","components/DailyWeather.js","helpers.js","components/WeatherDescriptionItem.js","components/WeatherDescription.js","components/Weather.js","components/App.js","index.js"],"names":["combineReducers","weather","prevState","action","type","payload","location","tempScale","fetchWeather","process","REACT_APP_KEY","lat","lon","dispatch","a","axios","get","response","console","log","data","fetchLocation","city","getState","then","catch","error","fetchWeatherAndLocation","coords","coord","connect","useState","input","setInput","onSearchSubmit","e","preventDefault","err","onSubmit","className","placeholder","value","onChange","target","required","onClick","state","toggleTempScale","celsiusFontWeight","fahrenheitFontWeight","src","style","maxWidth","height","alt","fontWeight","temperature","name","current","main","temp","daily","max","min","hourly","map","hour","index","time","moment","unix","dt","format","pop","Math","round","icon","description","day","humidity","windDegreeToText","degree","WeatherDescriptionItem","sunrise","sunset","wind_deg","wind_speed","feels_like","rain","pressure","visibility","uvi","useEffect","kelvin","kelvinToFahrenheit","Object","keys","length","night","role","App","ReactDOM","render","store","createStore","reducers","applyMiddleware","thunk","document","querySelector"],"mappings":"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","file":"static/js/main.ad3b9625.chunk.js","sourcesContent":["import { combineReducers } from 'redux';\r\nimport weatherReducer from './weatherReducer';\r\nimport locationReducer from './locationReducer';\r\nimport tempScaleReducer from './tempScaleReducer';\r\n\r\nexport default combineReducers({\r\n  weather: weatherReducer,\r\n  location: locationReducer,\r\n  tempScale: tempScaleReducer,\r\n});","export default (prevState = {}, action) => {\r\n    switch (action.type) {\r\n      case 'FETCH_WEATHER':\r\n        return action.payload;\r\n      default:\r\n        return prevState;\r\n    }\r\n  };","export default (prevState = {}, action) => {\r\n    switch (action.type) {\r\n      case 'FETCH_LOCATION':\r\n        return action.payload;\r\n      case 'FETCH_LOCATION_ERROR':\r\n        return prevState;\r\n      default:\r\n        return prevState;\r\n    }\r\n  };","export default (prevState = 'celsius', action) => {\r\n    switch (action.type) {\r\n      case 'TOGGLE_TEMP_SCALE':\r\n        return prevState === 'celsius' ? 'fahrenheit' : 'celsius';\r\n      default:\r\n        return prevState;\r\n    }\r\n  };","import axios from 'axios';\r\n\r\n const API_KEY =process.env.REACT_APP_KEY;\r\n\r\nexport const fetchWeather = (lat, lon) => {\r\n  return async (dispatch) => {\r\n    const response = await axios.get(\r\n      `https://api.openweathermap.org/data/2.5/onecall?lat=${lat}&lon=${lon}&appid=0ebae4084ca55c5789a2e229298d26e5`\r\n    );\r\n    console.log(response);\r\n    dispatch({\r\n      type: 'FETCH_WEATHER',\r\n      payload: response.data,\r\n    });\r\n  };\r\n};\r\n\r\nexport const fetchLocation = (city) => {\r\n  return async (dispatch, getState) => {\r\n    await axios\r\n      .get(`https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=0ebae4084ca55c5789a2e229298d26e5`)\r\n      .then((response) => {\r\n        dispatch({\r\n          type: 'FETCH_LOCATION',\r\n          payload: response.data,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        dispatch({\r\n          type: 'FETCH_LOCATION_ERROR',\r\n        });\r\n      });\r\n  };\r\n};\r\n\r\nexport const fetchWeatherAndLocation = (city) => {\r\n  return async (dispatch, getState) => {\r\n    await dispatch(fetchLocation(city));\r\n    const coords = getState().location.coord;\r\n    await dispatch(fetchWeather(coords.lat, coords.lon));\r\n  };\r\n};\r\n\r\nexport const toggleTempScale = () => {\r\n  return { type: 'TOGGLE_TEMP_SCALE' };\r\n};","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { fetchWeatherAndLocation } from '../actions';\r\n\r\nconst SearchLocation = ({ fetchWeatherAndLocation }) => {\r\n  const [input, setInput] = useState(\"\");\r\n  const onSearchChange = (e) => {\r\n    setInput(e.target.value);\r\n  };\r\n  const onSearchSubmit = (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      fetchWeatherAndLocation(input);\r\n    } catch (err) {\r\n      console.log('gg');\r\n    }\r\n  };\r\n  return (\r\n    <form onSubmit={onSearchSubmit} className=\"w-100 searchbar\">\r\n      <div className=\"input-group mb-2 mt-2\">\r\n        <input\r\n          className=\"form-control\"\r\n          type=\"search\"\r\n          placeholder=\"Enter a city\"\r\n          value={input}\r\n          onChange={onSearchChange}\r\n          required\r\n        />\r\n        <div className=\"invalid-tooltip\">Please provide a valid city.</div>\r\n        <div className=\"input-group-append\" onClick={onSearchSubmit}>\r\n          <button className=\"btn orange text-white\" type=\"button\">\r\n            Search\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default connect(null, { fetchWeatherAndLocation })(SearchLocation);","import React from 'react';\r\nimport \"./Weather.css\"; \r\nimport { connect } from 'react-redux';\r\nimport SearchLocation from './SearchLocation';\r\nimport { toggleTempScale } from '../actions';\r\n\r\nconst Header = ({ tempScale, toggleTempScale }) => {\r\n  const celsiusFontWeight = tempScale === 'celsius' ? 'bolder' : 'normal';\r\n  const fahrenheitFontWeight = tempScale === 'fahrenheit' ? 'bolder' : 'normal';\r\n\r\n  const onToggleTempScale = () => {\r\n    toggleTempScale();\r\n  };\r\n  return (\r\n    <nav className=\"navbar navbar-dark row mb-4 pt-4 pb-4 text-center temp\" >\r\n      <div className=\"col-sm-2 text-center\">\r\n        <img\r\n          className=\"img-fluid \"\r\n          src=\"https://img.icons8.com/clouds/100/000000/clouds.png\"\r\n          style={{ maxWidth: '100px', height: 'auto' }}\r\n          alt={'logo'}\r\n        />\r\n      </div>\r\n\r\n      <div className=\"col-sm-8\">\r\n        <SearchLocation />\r\n      </div>\r\n      <div className=\"col-sm-2\">\r\n        <button onClick={onToggleTempScale} type=\"button\" className=\"btn btn-light w-100\">\r\n          <span style={{ fontWeight: celsiusFontWeight }}>°C</span> /{' '}\r\n          <span style={{ fontWeight: fahrenheitFontWeight }}>°F</span>\r\n        </button>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return { tempScale: state.tempScale };\r\n};\r\n\r\nexport default connect(mapStateToProps, { toggleTempScale })(Header);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nconst CurrentWeather = ({ weather, location, temperature }) => {\r\n  return (\r\n    <div className=\"d-flex flex-column align-items-center\">\r\n      <h2 className=\"location-name nn\">{location.name}</h2>\r\n      <h4 className=\"weather-short-description nn\">{weather.current.weather[0].main}</h4>\r\n      <h1 className=\"display-1 ml-3 nn\">{temperature(weather.current.temp)}</h1>\r\n      <div className=\"d-flex nn\">\r\n        <p className=\"mx-1 nn\">H:{temperature(weather.daily[0].temp.max)}</p>\r\n        <p className=\"mx-1 nn\">L:{temperature(weather.daily[0].temp.min)}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nconst mapStateToProps = (state) => {\r\n  return { weather: state.weather, location: state.location };\r\n};\r\n\r\nexport default connect(mapStateToProps)(CurrentWeather);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport \"./Weather.css\"; \r\nimport moment from 'moment';\r\n\r\nconst HourlyWeather = ({ hourly, temperature }) => {\r\n  const renderHourly = () => {\r\n    return hourly.map((hour, index) => {\r\n      if (index < 27) {\r\n        const time = index === 0 ? 'Now' : moment.unix(hour.dt).format('HH');\r\n        return (\r\n          <div className=\"d-flex flex-column col-2 align-items-center px-4 \" key={hour.dt}>\r\n            <p\r\n              className=\"h-25\"\r\n              style={time === 'Now' ? { fontWeight: 'bolder' } : { fontWeight: 'Bold' }}\r\n            >\r\n              {time}\r\n            </p>\r\n            <p className=\"text-primary\">{hour.pop > 0 ? Math.round(hour.pop * 100) + '%' : ''}</p>\r\n            <figure>\r\n              <img\r\n                className=\"img-fluid weather-img\"\r\n                src={` https://openweathermap.org/img/wn/${hour.weather[0].icon}@4x.png`}\r\n                alt={hour.weather[0].description}\r\n              />\r\n            </figure>\r\n\r\n            <p className=\"\">{temperature(hour.temp)}</p>\r\n          </div>\r\n        );\r\n      } else {\r\n        return null;\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"d-flex flex-row overflow-auto border-top border-bottom pb-2 pt-2\">\r\n      {renderHourly()}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return { hourly: state.weather.hourly };\r\n};\r\n\r\nexport default connect(mapStateToProps)(HourlyWeather);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport \"./Weather.css\"; \r\nimport moment from 'moment';\r\n\r\nconst DailyWeather = ({ weather, temperature }) => {\r\n  const renderDaily = () => {\r\n    return weather.map((day, index) => {\r\n      if (index === 0) {\r\n        return null;\r\n      }\r\n      return (\r\n        <div\r\n          key={day.dt}\r\n          className=\"list-group-item d-flex justify-content-between align-items-center row px-0 py-md-0 border-bottom\"\r\n        >\r\n          <div className=\"col\">\r\n            <p className=\"mb-0\">{moment.unix(day.dt).format('dddd')}</p>\r\n          </div>\r\n          <div className=\"col px-2 text-center\">\r\n            <img\r\n              className=\"img-fluid weather-img\"\r\n              src={`https://openweathermap.org/img/wn/${day.weather[0].icon}@4x.png`}\r\n              alt={day.weather[0].description}\r\n            />\r\n          </div>\r\n          <div className=\"col d-none d-md-block d-lg-block d-xl-block text-center\">\r\n            {Math.round(day.pop * 100)}%\r\n          </div>\r\n          <div className=\"col d-none d-md-block text-center\">{day.humidity}%</div>\r\n          <div className=\"col d-flex flex-row justify-content-end\">\r\n            <p className=\" mb-0\">{temperature(day.temp.max)}</p>\r\n            <p className=\" ml-2 mb-0\">{temperature(day.temp.min)}</p>\r\n          </div>\r\n        </div>\r\n      );\r\n    });\r\n  };\r\n  return (\r\n    <div className=\"container hi\">\r\n      <div className=\"mb-4 list-group list-group-flush hi\">\r\n        <div className=\"list-group-item d-flex justify-content-between align-items-center row px-0 py-md-0 border-bottom text-center day-header hi\">\r\n          <div className=\"col text-left d-none d-md-block d-lg-block d-xl-block hi\">\r\n            <small>DAY</small>\r\n          </div>\r\n          <div className=\"col d-none d-md-block d-lg-block d-xl-bloc text-mutedk\"></div>\r\n          <div className=\"col d-none d-md-block d-lg-block d-xl-block  hi\">\r\n            <small>CHANCE OF RAIN</small>\r\n          </div>\r\n          <div className=\"col d-none d-md-block d-lg-block d-xl-block hi\">\r\n            <small>HUMIDITY</small>\r\n          </div>\r\n          <div className=\"col text-right d-none d-md-block d-lg-block d-xl-block hi\">\r\n            <small>TEMPERATURE</small>\r\n          </div>\r\n        </div>\r\n        {renderDaily()}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return { weather: state.weather.daily };\r\n};\r\n\r\nexport default connect(mapStateToProps)(DailyWeather);","export const kelvinToCelsius = (kelvin) => {\r\n    return `${Math.round(kelvin - 273.15)}°`;\r\n  };\r\n  export const kelvinToFahrenheit = (kelvin) => {\r\n    return `${Math.round((kelvin - 273.15) * (9 / 5) + 32)}°`;\r\n  };\r\n  \r\n  export const rainPercentage = (day) => {\r\n    return day;\r\n    // let sum = 0\r\n    // return day.map((hour, index) => {\r\n    //   if (index < 24) {\r\n  \r\n    //   }\r\n    // })\r\n  };\r\n  export const windDegreeToText = (degree) => {\r\n    switch (true) {\r\n      case degree < 22.5:\r\n        return 'n';\r\n      case degree < 45:\r\n        return 'nne';\r\n      case degree < 67.5:\r\n        return 'ne';\r\n      case degree < 90:\r\n        return 'ene';\r\n      case degree < 112.5:\r\n        return 'e';\r\n      case degree < 135:\r\n        return 'ese';\r\n      case degree < 157.5:\r\n        return 'se';\r\n      case degree < 180:\r\n        return 'sse';\r\n      case degree < 202.5:\r\n        return 's';\r\n      case degree < 225:\r\n        return 'ssw';\r\n      case degree < 247.5:\r\n        return 'sw';\r\n      case degree < 270:\r\n        return 'wsw';\r\n      case degree < 292.5:\r\n        return 'w';\r\n      case degree < 315:\r\n        return 'wnw';\r\n      case degree < 337.5:\r\n        return 'nnw';\r\n      default:\r\n        return 'nw';\r\n    }\r\n  };","import React from 'react';\r\n\r\nconst WeatherDescriptionItem = ({ description, value }) => {\r\n  return (\r\n    <li className=\"list-group-item  pl-md-2 col text-md-center weather-description bg-dark text-white\">\r\n      <small className=\"text-muted\">{description}</small>\r\n      <h5 className=\"mb-0 font-weight-normal\">{value}</h5>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default WeatherDescriptionItem;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport \"./Weather.css\";\r\nimport moment from 'moment';\r\nimport { windDegreeToText } from '../helpers';\r\n\r\nimport WeatherDescriptionItem from './WeatherDescriptionItem';\r\n\r\nconst WeatherDescription = ({ weather, temperature }) => {\r\n  return (\r\n    <div className=\"container temp\">\r\n      <div className=\"row list-group-flush flex-md-row justify-content-center temp\">\r\n        <WeatherDescriptionItem\r\n          description={'SUNRISE'}\r\n          value={moment.unix(weather.current.sunrise).format('HH:MM')}\r\n        />\r\n        <WeatherDescriptionItem\r\n          description={'SUNSET'}\r\n          value={moment.unix(weather.current.sunset).format('HH:MM')}\r\n        />\r\n        <WeatherDescriptionItem\r\n          description={'CHANCE OF RAIN'}\r\n          value={`${Math.round(weather.hourly[0].pop * 100)}%`}\r\n        />\r\n        <WeatherDescriptionItem description={'HUMIDITY'} value={`${weather.current.humidity}%`} />\r\n        <WeatherDescriptionItem\r\n          description={'WIND'}\r\n          value={`${windDegreeToText(weather.current.wind_deg)} ${Math.round(\r\n            weather.current.wind_speed\r\n          )} km/hr`}\r\n        />\r\n      </div>\r\n      <div className=\"row list-group-flush flex-column flex-md-row justify-content-center  border-bottom border-dark  maje\">\r\n        <WeatherDescriptionItem\r\n          description={'FEELS LIKE'}\r\n          value={temperature(weather.current.feels_like)}\r\n        />\r\n        <WeatherDescriptionItem\r\n          description={'PRECIPITATION'}\r\n          value={weather.daily[0].rain ? `${weather.daily[0].rain} cm` : '0%'}\r\n        />\r\n        <WeatherDescriptionItem\r\n          description={'PRESSURE'}\r\n          value={`${weather.current.pressure} hPa`}\r\n        />\r\n        <WeatherDescriptionItem\r\n          description={'VISIBILITY'}\r\n          value={`${weather.current.visibility / 100} km`}\r\n        />\r\n        <WeatherDescriptionItem description={'UV INDEX'} value={weather.current.uvi} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return { weather: state.weather };\r\n};\r\n\r\nexport default connect(mapStateToProps)(WeatherDescription);","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { fetchWeatherAndLocation } from '../actions';\r\nimport \"./Weather.css\"; \r\nimport Header from './Header';\r\nimport CurrentWeather from './CurrentWeather';\r\nimport HourlyWeather from './HourlyWeather';\r\nimport DailyWeather from './DailyWeather';\r\nimport WeatherDescription from './WeatherDescription';\r\n\r\nimport { kelvinToCelsius, kelvinToFahrenheit } from '../helpers';\r\n\r\n// TODO:\r\n// 1. handle fetch location error UI response\r\n\r\nconst Weather = ({ weather, location, fetchWeatherAndLocation, tempScale }) => {\r\n  useEffect(() => {\r\n    fetchWeatherAndLocation('Delhi');\r\n  }, [fetchWeatherAndLocation]);\r\n\r\n  const temperature = (temp) => {\r\n    return tempScale === 'celsius' ? kelvinToCelsius(temp) : kelvinToFahrenheit(temp);\r\n  };\r\n\r\n  const renderWeather = () => {\r\n    if (Object.keys(weather).length !== 0 && Object.keys(location).length !== 0) {\r\n      return (\r\n        <div className=\"mb-5\">\r\n          <div className=\"row justify-content-center align-items-center\">\r\n            <div className=\"col-md-4 order-md-1 container\">\r\n              <CurrentWeather temperature={temperature} />\r\n            </div>\r\n            <div className=\"col-md-8 order-md-2 container\">\r\n              <HourlyWeather temperature={temperature} />\r\n            </div>\r\n\r\n            <div className=\"col-md-12 order-md-5 mt-5\">\r\n              <DailyWeather temperature={temperature} />\r\n            </div>\r\n            <div className=\"col-md-12 order-md-4 bg-dark pt-5 pb-5\">\r\n              <WeatherDescription temperature={temperature} />\r\n            </div>\r\n            <div className=\"col-12 my-5 text-center order-md-2\">\r\n              Today: {weather.current.weather[0].description}. The high will be{' '}\r\n              {temperature(weather.daily[0].temp.max)}. The low tonight will be{' '}\r\n              {temperature(weather.daily[0].temp.night)}.\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div className=\"d-flex justify-content-center\">\r\n          <div className=\"spinner-border\" role=\"status\">\r\n            <span className=\"sr-only\">Loading...</span>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n  return (\r\n    <div>\r\n      <Header />\r\n      <div className=\"\">{renderWeather()}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return { weather: state.weather, location: state.location, tempScale: state.tempScale };\r\n};\r\n\r\nexport default connect(mapStateToProps, { fetchWeatherAndLocation })(Weather);","import React from 'react';\r\nimport \"./Weather.css\"; \r\n\r\nimport '../style.css';\r\n\r\nimport Weather from './Weather';\r\n\r\nconst App = () => {\r\n  return (\r\n    <div className=\"container-fluid \">\r\n      <Weather />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\n\nimport reducers from './reducers';\nimport App from './components/App';\n\nReactDOM.render(\n  <Provider store={createStore(reducers, applyMiddleware(thunk))}>\n    <App />\n  </Provider>,\n  document.querySelector('#root')\n);"],"sourceRoot":""}